#include <chrono>
#include <cmath>
#include <iostream>
#include <fstream>

using namespace std;
using namespace std::chrono;
void HardDriveBenchmark1(char* txt) {
    fstream file;
    file.open("file.txt", ios::out | ios::app | ios::binary);
    int loop = pow(10, 7);
    for (int i = 0; i < loop; i++) {
        file.write(txt, 109);
    }

    file.seekg(0);
    for (int i = 0; i < loop; i++) {
        file.read(txt, 109);
    }

    file.close();
}

int main() {
    // Prepare text buffer
    char text[109];
    for (int i = 0; i < 109; i++) {
        text[i] = 'a';
    }
    auto start = high_resolution_clock::now();
    HardDriveBenchmark1(text);   //acc hard drive benchmarking
    auto stop = high_resolution_clock::now();
    cout << "Function call completed." << endl;
    auto duration = duration_cast<seconds>(stop - start);

    int minutes = duration.count() / 60;
    int seconds = duration.count() % 60;

    cout << "Elapsed time: " << minutes << " minutes " << seconds << " seconds" << endl;

    return 0;
}
